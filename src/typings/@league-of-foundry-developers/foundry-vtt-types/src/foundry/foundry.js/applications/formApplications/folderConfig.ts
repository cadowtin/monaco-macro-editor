
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\applications\\formApplications\\folderConfig.d.ts",
      "// TODO: Remove this when updating this to 0.8.x!!!\n// eslint-disable-next-line\n// @ts-nocheck\n\n/**\n * Edit a folder, configuring its name and appearance\n */\ndeclare class FolderConfig extends FormApplication<FormApplication.Options, FolderConfig.Data, Folder> {\n  /**\n   * @override\n   * @defaultValue\n   * ```typescript\n   * mergeObject(super.defaultOptions, {\n   *   classes: [\"sheet\", \"folder-edit\"],\n   *   template: \"templates/sidebar/folder-edit.html\",\n   *   width: 360\n   * });\n   * ```\n   */\n  static get defaultOptions(): typeof FormApplication['defaultOptions'];\n\n  /**\n   * @override\n   */\n  get id(): string;\n\n  /**\n   * @override\n   */\n  get title(): string;\n\n  /**\n   * @param options - (unused)\n   * @override\n   */\n  getData(options?: Application.RenderOptions): Promise<FolderConfig.Data>;\n\n  /**\n   * @param event - (unused)\n   * @override\n   */\n  protected _updateObject(event: Event, formData: FolderConfig.FormData): ReturnType<Folder['update']>;\n}\n\ndeclare namespace FolderConfig {\n  interface Data {\n    folder: Folder.Data;\n    sortingModes: {\n      a: 'FOLDER.SortAlphabetical';\n      m: 'FOLDER.SortManual';\n    };\n    submitText: string;\n  }\n\n  type FormData = Pick<Folder.Data, 'color' | 'name' | 'sorting' | 'type'> & { parent: string };\n}\n"
    ]
  