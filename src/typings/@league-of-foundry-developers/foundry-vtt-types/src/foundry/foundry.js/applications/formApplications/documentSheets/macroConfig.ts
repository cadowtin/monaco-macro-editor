
    export default [
      "@league-of-foundry-developers\\foundry-vtt-types\\src\\foundry\\foundry.js\\applications\\formApplications\\documentSheets\\macroConfig.d.ts",
      "/**\n * A Macro configuration sheet\n *\n * @see {@link Macro} The Macro Entity which is being configured\n */\n// TODO: Remove this when `DocumentSheet` has been updated to use `foundry.abstract.Document`s instead of entities!!!\n// eslint-disable-next-line\n// @ts-ignore\ndeclare class MacroConfig extends DocumentSheet<DocumentSheet.Options, MacroConfig.Data, Macro> {\n  /**\n   * @override\n   * @defaultValue\n   * ```typescript\n   * mergeObject(super.defaultOptions, {\n   *   classes: [\"sheet\", \"macro-sheet\"],\n   *   template: \"templates/sheets/macro-config.html\",\n   *   width: 560,\n   *   height: 480,\n   *   resizable: true\n   * });\n   * ```\n   */\n  static get defaultOptions(): typeof DocumentSheet['defaultOptions'];\n\n  /**\n   * @override\n   */\n  get id(): string;\n\n  /**\n   * @override\n   */\n  getData(): MacroConfig.Data;\n\n  /**\n   * @override\n   */\n  activateListeners(html: JQuery): void;\n\n  /**\n   * Handle changing the actor profile image by opening a FilePicker\n   */\n  protected _onEditImage(event: JQuery.ClickEvent): ReturnType<FilePicker['browse']>;\n\n  /**\n   * Save and execute the macro using the button on the configuration sheet\n   * @param event - The originating click event\n   */\n  protected _onExecute(event: JQuery.ClickEvent): Promise<void>;\n\n  /**\n   * @override\n   */\n  protected _updateObject(event: Event, formData: MacroConfig.FormData): Promise<Macro>;\n}\n\ndeclare namespace MacroConfig {\n  interface Data extends DocumentSheet.Data {\n    macroTypes: foundry.utils.Duplicated<Game['system']['entityTypes']['Macro']>;\n    macroScopes: typeof foundry.CONST['MACRO_SCOPES'];\n  }\n\n  type FormData = {\n    command: string;\n    img: string;\n    name: string;\n    type: ValueOf<typeof CONST.MACRO_TYPES>;\n  };\n}\n"
    ]
  